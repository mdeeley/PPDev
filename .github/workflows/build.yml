name: build
# Export solution from DEV environment
# unpack it and prepare, commit and push a git branch with the changes
on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: ALMLab
       #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/
env:
#edit your values here
  ENVIRONMENT_URL: 'https://orgb1369bf8.crm11.dynamics.com'
  CLIENT_ID: '3df282dd-9d42-448b-b9e4-fac8beadd2a0'
  TENANT_ID: 'e54a0000-05b8-4a62-b9bb-5ea5fdbb5178'
permissions:
  contents: write
jobs:
  export-from-dev:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:  
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Power Platform Action Install
      uses: microsoft/powerplatform-actions/actions-install@v1
      
    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformDevSPN  }}
        tenant-id: ${{env.TENANT_ID}}

    # set solution version number
    
    # export unmanaged solution
    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformDevSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    # export managed solution
    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformDevSPN }} 
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        managed: true
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip

    # unpack solutions
    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Both'
        overwrite-files: true

    #- name: branch-solution, prepare it for a PullRequest
    #  uses: microsoft/powerplatform-actions/branch-solution@v1
    #  with:
    #    solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
    #    solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
    #    repo-token: ${{ secrets.GITHUB_TOKEN }}
    #    allow-empty-commit: true

    - name: Commit to main
      run: |
        git config --global user.name 'Matt Deeley'
        git config --global user.email 'matt.deeley@gmail.com'
        git commit -am "Automated Build"
        git push
