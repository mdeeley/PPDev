name: release-solution2
# Reusable workflow
# package solution as managed
# upload the solution to the GitHub artifacts and deploy to the PROD environment
# set release tag
on:
  workflow_dispatch:
    inputs: 
      solution_name:
        description: 'The solution name.'
        type: string
        default: ALMLab       
      solution_shipping_folder:
        description: 'folder name for staging the exported solution *do not change*'        
        type: string
        default: out/ship/
      solution_outbound_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder: 
       description: 'folder name to be created and checked in *do not change*'
       type: string
       default: solutions/
      solution_release_folder:
       description: 'folder where the released binaries are going to be hosted *do not change*'
       type: string
       default: out/release
      TARGET_ENVIRONMENT_URL: 
        description: 'Production environment url.'
        type: string
        required: true
      TARGET_CLIENT_ID: 
        description: 'The client id'
        type: string
        required: true
      TARGET_TENANT_ID: 
        description: 'The tenant id'
        type: string
        required: true
    secrets:
      envTargetSecret:
        description: 'The secret value for authentication using SPN'
        required: true
      
env:
  solution_name: ALMLab
  TARGET_ENVIRONMENT_URL: https://orgaa36f53b.crm11.dynamics.com
  TARGET_CLIENT_ID: 8a720366-704f-4a55-a4e8-725843b134b3
  TARGET_TENANT_ID: e54a0000-05b8-4a62-b9bb-5ea5fdbb5178  
secrets:
  envTargetSecret: ${{ secrets.PowerPlatformProdSPN }}
  
jobs:
  create-managed-solution:
    runs-on: windows-latest

    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Power Platform Action Install
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: extract version number
      id: extract_version
      run: |
        [xml]$xml = Get-Content ./solutions/ALMLab/Other/Solution.xml
        $SOLUTIONVERSION = $xml.ImportExportXml.SolutionManifest.Version
        echo "VERSIONNUMBER=$SOLUTIONVERSION" >> $env:GITHUB_ENV
      
    - name: output version number
      run: |
        echo "${{env.VERSIONNUMBER}}"

    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v1
      with:
        solution-folder: ${{ inputs.solution_source_folder}}/${{ inputs.solution_name }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_${{env.VERSIONNUMBER}}.zip
        solution-type: Both

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: build artifacts
      run: make build-linux && make build-windows && make build-darwin

    - name: upload unmanaged solution
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_${{env.VERSIONNUMBER}}.zip
        asset_name: ${{ inputs.solution_name }}_${{env.VERSIONNUMBER}}.zip
        asset_content_type: application/gzip

    - name: upload managed solution
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_${{env.VERSIONNUMBER}}_managed.zip
        asset_name: ${{ inputs.solution_name }}_${{env.VERSIONNUMBER}}_managed.zip
        asset_content_type: application/gzip

    - name: Upload unmanaged solution
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.solution_name }}.zip
        path: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_${{env.VERSIONNUMBER}}.zip

    - name: Upload managed solution
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.solution_name }}_managed.zip
        path: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_${{env.VERSIONNUMBER}}_managed.zip

  # convert-to-managed:
  #   runs-on: windows-latest
  #   # or you can say runs-on: ubuntu-latest
  #   env:
  #     RUNNER_DEBUG: 1

  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       lfs: true

  #   - name: Power Platform Action Install
  #     uses: microsoft/powerplatform-actions/actions-install@v1
      
  #   - name: Pack solution
  #     uses: microsoft/powerplatform-actions/pack-solution@v1
  #     with:
  #       solution-folder: ${{ inputs.solution_source_folder}}/${{ inputs.solution_name }}
  #       solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}.zip
  #       solution-type: Unmanaged

  #   - name: Import solution as unmanaged to build env
  #     uses: microsoft/powerplatform-actions/import-solution@v1
  #     with:
  #       environment-url: ${{inputs.BUILD_ENVIRONMENT_URL}}
  #       app-id: ${{inputs.BUILD_CLIENT_ID}}
  #       client-secret: ${{ secrets.envBuildSecret }}
  #       tenant-id: ${{inputs.BUILD_TENANT_ID}}
  #       solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}.zip
  #       force-overwrite: true
  #       publish-changes: true

  #   - name: Export solution as managed
  #     uses: microsoft/powerplatform-actions/export-solution@v1
  #     with:
  #       environment-url: ${{inputs.BUILD_ENVIRONMENT_URL}}
  #       app-id: ${{inputs.BUILD_CLIENT_ID}}
  #       client-secret: ${{ secrets.envBuildSecret }} 
  #       tenant-id: ${{inputs.BUILD_TENANT_ID}}
  #       solution-name: ${{ inputs.solution_name }}
  #       managed: true
  #       solution-output-file: ${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip

  #   - name: Upload the ready to ship solution to GH artifact store
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: managedSolutions
  #       path: ${{ inputs.solution_shipping_folder}}/

  # release-to-staging:
  #   needs: [ convert-to-managed ]
  #   runs-on: windows-latest
  #   env:
  #     RUNNER_DEBUG: 1

  #   steps:
  #   - name: Power Platform Action Install
  #     uses: microsoft/powerplatform-actions/actions-install@v1
      
  #   - uses: actions/checkout@v2
  #     with:
  #       lfs: true

  #   - name: Fetch the ready to ship solution from GH artifact store
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: managedSolutions
  #       path: ${{ inputs.solution_release_folder}}
  #   - name: Import solution to prod env
  #     uses: microsoft/powerplatform-actions/import-solution@v1
  #     with:
  #       environment-url: ${{inputs.PRODUCTION_ENVIRONMENT_URL}}
  #       app-id: ${{inputs.PRODUCTION_CLIENT_ID}}
  #       client-secret: ${{ secrets.envProdSecret }}
  #       tenant-id: ${{inputs.PRODUCTION_TENANT_ID}}
  #       solution-file: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip
  #       force-overwrite: true
  #       publish-changes: true
